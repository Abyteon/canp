[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "canp-python"
version = "0.1.0"
description = "高性能CAN总线数据处理流水线 - Python版本"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "CANP Team", email = "team@canp-project.org"}
]
keywords = ["can", "automotive", "data-processing", "high-performance"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"
dependencies = [
    # 核心数据处理
    "numpy>=1.24.0",
    
    # 配置管理
    "pydantic>=2.0.0",
    
    # 日志和监控
    "structlog>=23.0.0",
    "rich>=13.0.0",
    
    # 性能监控
    "psutil>=5.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "mypy>=1.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
]

[project.urls]
Homepage = "https://github.com/your-org/canp-python"
Repository = "https://github.com/your-org/canp-python"
"Bug Tracker" = "https://github.com/your-org/canp-python/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/canp"]

[tool.black]
line-length = 88
target-version = ['py39']

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["canp"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "numpy.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
] 